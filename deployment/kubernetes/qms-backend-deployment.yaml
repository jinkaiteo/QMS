apiVersion: apps/v1
kind: Deployment
metadata:
  name: qms-backend
  namespace: qms-platform
  labels:
    app: qms-backend
    component: api
    tier: backend
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: qms-backend
  template:
    metadata:
      labels:
        app: qms-backend
        component: api
        tier: backend
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: qms-backend
        image: ghcr.io/your-org/qms-backend:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: qms-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: qms-secrets
              key: redis-url
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: qms-secrets
              key: secret-key
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: qms-secrets
              key: jwt-secret-key
        - name: MINIO_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: qms-config
              key: minio-endpoint
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: qms-secrets
              key: minio-access-key
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: qms-secrets
              key: minio-secret-key
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: temp
          mountPath: /tmp
        - name: app-logs
          mountPath: /app/logs
      volumes:
      - name: temp
        emptyDir: {}
      - name: app-logs
        emptyDir: {}
      imagePullSecrets:
      - name: ghcr-secret
---
apiVersion: v1
kind: Service
metadata:
  name: qms-backend-service
  namespace: qms-platform
  labels:
    app: qms-backend
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: qms-backend
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: qms-backend-pdb
  namespace: qms-platform
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: qms-backend