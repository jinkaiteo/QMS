[tool:pytest]
# QMS Pytest Configuration

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=app
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=80

# Test markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    compliance: marks tests as compliance/regulatory tests
    security: marks tests as security tests
    performance: marks tests as performance tests
    api: marks tests as API tests
    database: marks tests as database tests
    auth: marks tests as authentication tests

# Minimum version requirements
minversion = 6.0

# Test timeout
timeout = 300

# Warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Coverage settings
[coverage:run]
source = app
omit = 
    */tests/*
    */test_*.py
    */__init__.py
    */conftest.py
    */migrations/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod