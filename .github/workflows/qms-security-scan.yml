name: QMS Security Scanning

on:
  schedule:
    - cron: '0 2 * * 1'  # Weekly on Monday at 2 AM
  workflow_dispatch:
  push:
    branches: [ main ]

env:
  REGISTRY: ghcr.io

jobs:
  # ===========================
  # SAST - Static Analysis
  # ===========================
  sast-scan:
    name: Static Application Security Testing
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: python, javascript
        queries: security-extended,security-and-quality

    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:python,javascript"

  # ===========================
  # Dependency Scanning
  # ===========================
  dependency-scan:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Install Python dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install safety pip-audit

    - name: Python dependency scan (Safety)
      run: |
        cd backend
        safety check --json --output safety-report.json
        pip-audit --format=json --output=pip-audit-report.json

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install Node.js dependencies
      run: |
        cd frontend
        npm ci

    - name: Node.js dependency scan
      run: |
        cd frontend
        npm audit --audit-level=moderate --json > npm-audit-report.json

    - name: Upload dependency scan results
      uses: actions/upload-artifact@v3
      with:
        name: dependency-scan-results
        path: |
          backend/safety-report.json
          backend/pip-audit-report.json
          frontend/npm-audit-report.json
        retention-days: 30

  # ===========================
  # Container Image Scanning
  # ===========================
  container-scan:
    name: Container Image Security Scan
    runs-on: ubuntu-latest
    if: github.event_name != 'schedule'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build Backend Image for Scanning
      run: |
        cd backend
        docker build -t qms-backend-scan .

    - name: Run Trivy scanner on Backend
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'qms-backend-scan'
        format: 'sarif'
        output: 'backend-trivy-results.sarif'

    - name: Build Frontend Image for Scanning
      run: |
        cd frontend
        docker build -t qms-frontend-scan .

    - name: Run Trivy scanner on Frontend
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'qms-frontend-scan'
        format: 'sarif'
        output: 'frontend-trivy-results.sarif'

    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: '.'

  # ===========================
  # License Compliance
  # ===========================
  license-scan:
    name: License Compliance Check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Install license scanning tools
      run: |
        pip install pip-licenses licensecheck

    - name: Python license scan
      run: |
        cd backend
        pip install -r requirements.txt
        pip-licenses --format=json --output-file=python-licenses.json
        licensecheck --zero

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Node.js license scan
      run: |
        cd frontend
        npm ci
        npx license-checker --json --out npm-licenses.json

    - name: Upload license reports
      uses: actions/upload-artifact@v3
      with:
        name: license-reports
        path: |
          backend/python-licenses.json
          frontend/npm-licenses.json
        retention-days: 90

  # ===========================
  # Security Report Generation
  # ===========================
  security-report:
    name: Generate Security Report
    runs-on: ubuntu-latest
    needs: [sast-scan, dependency-scan, container-scan, license-scan]
    if: always()

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3

    - name: Generate security summary
      run: |
        echo "# QMS Platform Security Scan Summary" > security-summary.md
        echo "Generated: $(date)" >> security-summary.md
        echo "" >> security-summary.md
        echo "## Scan Results" >> security-summary.md
        echo "- SAST Scan: ${{ needs.sast-scan.result }}" >> security-summary.md
        echo "- Dependency Scan: ${{ needs.dependency-scan.result }}" >> security-summary.md
        echo "- Container Scan: ${{ needs.container-scan.result }}" >> security-summary.md
        echo "- License Scan: ${{ needs.license-scan.result }}" >> security-summary.md

    - name: Upload security summary
      uses: actions/upload-artifact@v3
      with:
        name: security-summary
        path: security-summary.md
        retention-days: 90